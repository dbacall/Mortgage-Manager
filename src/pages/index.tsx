import { getSession } from "next-auth/react";
import Head from "next/head";
import { useState, useEffect } from "react";
import { getLayout } from "src/components/layouts/MainLayout/MainLayout";
import type { NextPageWithLayout } from './_app';

const Home: NextPageWithLayout = ({ user, mortgages }) => {
  const [filteredMortgages, setFilteredMorgages] = useState(mortgages)
  const [searchTerm, setSearchTerm] = useState('')

  useEffect(() => {
    const searchedMortgages = mortgages.filter((mortgage) => {
      return `${mortgage.client.firstName} ${mortgage.client.lastName}`.toLowerCase().includes(searchTerm.toLowerCase())
    })

    setFilteredMorgages(searchedMortgages)
  }, [searchTerm])

  const { company } = user

  return (
    <>
      <Head>
        <title>Mortgage Manager</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="px-10 py-16">
        <h1 className="text-4xl text-content-tertiary">
          {company.name}
        </h1>
        <div className="flex items-center justify-between w-full mt-6 overflow-none text-content-primary">
          <h2 className="text-2xl">
            Client Renewals
          </h2>
          <div>
            <input
              type="text"
              placeholder="Searchâ€¦"
              className="input input-bordered border-slate-300"
              onChange={(e) => {
                setSearchTerm(e.target.value)
              }}
            />
          </div>
        </div>
        <table className="table w-full mt-5 rounded-lg shadow-xl">
          <thead >
            <tr>
              <th className="bg-slate-100 text-content-secondary">Name</th>
              <th className="bg-slate-100 text-content-secondary">Phone</th>
              <th className="bg-slate-100 text-content-secondary">Email</th>
              <th className="bg-slate-100 text-content-secondary">Renewal Date</th>
            </tr>
          </thead>
          <tbody>
            {filteredMortgages.map((mortgage, id) => (
              <tr key={id}>
                <td className="border-slate-100 text-content-primary">{mortgage.client.firstName} {mortgage.client.lastName}</td>
                <td className="border-slate-100 text-content-primary">0{mortgage.client.phone}</td>
                <td className="border-slate-100 text-content-primary">{mortgage.client.email}</td>
                <td className="border-slate-100 text-content-primary">{new Date(mortgage.renewalDate).toLocaleDateString('en-GB')}</td>
              </tr>
            ))}

          </tbody>
        </table>
      </main>
    </>
  );
};

export async function getServerSideProps(context) {
  const session = await getSession(context)


  if (!session) {
    return {
      redirect: {
        destination: '/api/auth/signin',
        permanent: false,
      },
    }
  }

  const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/user/${session.user.id}`)

  const user = await response.json()

  if (!user.companyMembershipId) {
    return {
      redirect: {
        destination: '/getting-started',
        permanent: false,
      },
    }
  }


  const mortgagesRes = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/mortgages/${user.companyId}`)

  const mortgages = await mortgagesRes.json()

  return {
    props: { user, mortgages }
  }
}

Home.getLayout = getLayout

export default Home;
